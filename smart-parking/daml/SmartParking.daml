module SmartParking where

data Brand = BMW | Nissan | Mercedez | Porche
    deriving(Eq, Show)

data Currency = EUR | USD | BTC
    deriving(Eq, Show)

data EstadoVaga = Reservado | Ocupado | Livre | Cancelado
    deriving(Eq, Show)

data Stall = A | B | C
    deriving(Eq, Show)


template CarPropose
    with
        car: Car 
    where
        signatory car.issuer

        controller car.owner can
          Accept : ContractId Car
            do 
                create car
                         
-- Template para criar o registro do carro
template Car
    with
        owner : Party
        issuer: Party
        plate : Text
        brand : Brand
        year : Date
        id: Int
    where
        signatory owner,issuer



      
-- Template para convidar outros parkes para fazer parte da rede do fabricante     
template Park
    with
        participantes: [Party]
        
        
    where
        signatory participantes

        choice Invite: ContractId InvitePark
            with
                participante : Party
                newParticipante: Party
               
            controller participante
            do
                assert $ elem participante participantes
                create InvitePark with park=this; participante=newParticipante

template InvitePark
    with
        park: Park
        participante: Party
        
    where
        signatory park.participantes

        controller participante can
            AcceptInvite : ContractId Park
                do 
                    create park 
                        with 
                            participantes=participante:: park.participantes
                            
                            
                           
     
          


                        
 
template Tokens
    with 
        owner: Party
        issuer: Party
        nTokens: Int
    where
        signatory  owner
    

template BayTokens
    with
        owner:Party
        issuer: Party
        euros: Int
    where
        signatory owner

        controller issuer can 
            ConvetertMoneyToTOkens: ContractId Tokens
                do
                    create  Tokens
                        with
                            nTokens = euros * 5 --- 1€ equivale a 5 tokens
                            .. 


template ParkinSpace
    with
        parkingSpaceOwner:Party
        carPlate: Text
        stall: Stall
        estadoDaVaga:EstadoVaga
        
    where signatory parkingSpaceOwner
    

template ReservarEspaco
    with 
        driver: Party
        parkingSpaceOwner: Party
        carPlateSpace: Text
        stall: Stall
        reservar: EstadoVaga
        distance: Int
        
       
    
    where 
        signatory driver
    
        controller parkingSpaceOwner can 
            AcceptReservation: ContractId ParkinSpace
                do
                    create ParkinSpace
                        with
                            stall = stall
                            estadoDaVaga = reservar
                            carPlate = carPlateSpace
                            ..
            Decline: ContractId DeclineReservation
                with
                    reason: Text
                    suggestDistance: Int
                    
                do
                    create DeclineReservation
                        with ..


template DeclineReservation
    with
        driver: Party
        parkingSpaceOwner: Party
        carPlateSpace: Text
        suggestDistance: Int
        reservar: EstadoVaga
        reason: Text
        stall: Stall
        
    where
        signatory driver,parkingSpaceOwner

        
        controller parkingSpaceOwner can
            RequestNewStall: ContractId ReservarEspaco
                with
                    distance: Int
                do
                     
                    create ReservarEspaco
                        with
                            stall = stall
                            reservar = reservar
                            carPlateSpace = carPlateSpace
                            distance=suggestDistance
                            ..              

template CancelReservation
    with
        parkingSpaceOwner:Party
        driver: Party
        carPlate: Text
    where
        signatory parkingSpaceOwner,driver
    
        controller parkingSpaceOwner can
            Cancel: ContractId ParkinSpace
                with
                    reason: Text
                do
                    create ParkinSpace
                        with
                            stall = A
                            estadoDaVaga = Cancelado
                            carPlate = carPlate
                            ..
                    
          
    
                   
--- Reserva so pode ser feito a partir de uma certa distancia
---- Depois de X tempo a reserva é cancelado
---- O pagamento ser processado pelo fabricante e atribui os tokens
--- o fabricante atribui um pre-registro do automovel na aplicação
---- Pagamento com tokens e com a wallet
---- certificar se o carro esta a uma distancia razoavel para realizar a reserva e certificar que ele chega em um determiando tempo   

                


              
                           
        




